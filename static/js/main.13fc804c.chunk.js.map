{"version":3,"sources":["components/UserCard/UserCard.module.scss","components/Wrapper/Wrapper.module.scss","components/LoadingSkeleton/LoadingSkeleton.module.scss","components/Wrapper/Wrapper.js","components/Header/HeaderActions.js","components/Header/Header.js","utils/splitArray.js","utils/filterDataByColor.js","utils/filterDataByCity.js","components/LoadingSkeleton/LoadingSkeleton.js","components/UserCard/UserCardItem.js","components/UserCard/UserCard.js","App.js","serviceWorker.js","index.js","components/Header/Header.module.scss"],"names":["module","exports","Wrapper","props","className","StylesWrapper","wrapper","children","HeaderActions","componentDidMount","getColorStateFromStorage","localStorage","getItem","isColorStateTrue","isCitiesStateTrue","setState","btnColorState","btnCitiesState","this","filterColorState","state","filterCitiesState","handleBtnColorClick","setItem","handleBtnCitiesClick","btnColorClassName","StylesHeader","navigation__item","navigation__item_active","btnCitiesClassName","navigation__container","id","onClick","Component","Header","splitArray","array","length","chunks","Array","from","_","forEach","value","index","push","filterDataByColor","data","getAgeGreen","filter","el","dob","age","getAgeBlue","getAgeRed","concat","filterDataByCity","sort","a","b","location","city","LoadingSkeleton","StylesLoadingSkeleton","loading__skeleton","UserCardList","bgColor","userData","StylesUserCard","bg__red","bg__green","bg__blue","card__container","card__item","src","picture","large","alt","name","first","last","card__desc","title","postcode","card__email","email","UserCard","window","addEventListener","updateDimensions","bind","axios","get","then","response","originalData","results","chunkedData","isLoading","sortedDataByColor","sortedDataByCity","newChunkedData","catch","error","errorMessage","handleScroll","node","cardContainerRef","windowWidth","scrollLeft","current","scrollTop","scrollWidth","scrollHeight","clientHeight","getMoreUsers","scrolledCount","scrolledCountMax","setTimeout","updatedData","React","createRef","innerWidth","windowHeight","innerHeight","removeEventListener","dataSource","isColorSelected","isCitiesSelected","map","user","key","UserCardItem","mobileHeight","ref","container","onScroll","style","height","renderContent","notice","App","handleColorStateChange","handleCitiesStateChange","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.13fc804c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notice\":\"UserCard_notice__gdGw4\",\"container\":\"UserCard_container__KjLn0\",\"card__container\":\"UserCard_card__container__10T6l\",\"card__desc\":\"UserCard_card__desc__2yz51\",\"card__item\":\"UserCard_card__item__1pg_h\",\"card__email\":\"UserCard_card__email__4MCfG\",\"bg__red\":\"UserCard_bg__red__37Uay\",\"bg__green\":\"UserCard_bg__green__1sCSd\",\"bg__blue\":\"UserCard_bg__blue__2qDC7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Wrapper_wrapper__2gcWR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading__skeleton\":\"LoadingSkeleton_loading__skeleton__a6FN5\",\"pulse\":\"LoadingSkeleton_pulse__3mlRe\"};","import React from 'react';\nimport StylesWrapper from './Wrapper.module.scss';\n\nconst Wrapper = (props) => (\n  <main className={`${StylesWrapper.wrapper}`}>\n    {props.children}\n  </main>\n)\n\nexport default Wrapper\n","import React, { Component } from 'react';\nimport StylesHeader from './Header.module.scss';\n\nclass HeaderActions extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      btnColorState: false,\n      btnCitiesState: false,\n    }\n  }\n\n  componentDidMount = () => {\n    let getColorStateFromStorage = localStorage.getItem('colorState');\n    let getCitiesStateFromStorage = localStorage.getItem('cityState');\n    let isColorStateTrue = (getColorStateFromStorage === 'true');\n    let isCitiesStateTrue = (getCitiesStateFromStorage === 'true');\n\n    if (getColorStateFromStorage !== null) {\n      this.setState({\n        btnColorState: isColorStateTrue,\n        btnCitiesState: isCitiesStateTrue\n      }, function () {\n          this.props.filterColorState(this.state.btnColorState);\n          this.props.filterCitiesState(this.state.btnCitiesState);\n        }\n      );\n    }\n  }\n\n  handleBtnColorClick = () => {\n    this.setState({\n      btnColorState: this.state.btnColorState ? !this.state.btnColorState : !this.state.btnColorState,\n      btnCitiesState: this.state.btnCitiesState ? !this.state.btnCitiesState : this.state.btnCitiesState\n    }, function () {\n        this.props.filterColorState(this.state.btnColorState);\n        this.props.filterCitiesState(this.state.btnCitiesState);\n        localStorage.setItem('colorState', this.state.btnColorState);\n        localStorage.setItem('cityState', this.state.btnCitiesState);\n      }\n    );\n  }\n\n  handleBtnCitiesClick = () => {\n    this.setState({\n      btnColorState: this.state.btnColorState ? !this.state.btnColorState : this.state.btnColorState,\n      btnCitiesState: this.state.btnCitiesState ? !this.state.btnCitiesState : !this.state.btnCitiesState\n    }, function () {\n        this.props.filterColorState(this.state.btnColorState);\n        this.props.filterCitiesState(this.state.btnCitiesState);\n        localStorage.setItem('colorState', this.state.btnColorState);\n        localStorage.setItem('cityState', this.state.btnCitiesState);\n      }\n    );\n  }\n\n  render() {\n    let btnColorClassName = this.state.btnColorState ? `${StylesHeader.navigation__item} ${StylesHeader.navigation__item_active}` : `${StylesHeader.navigation__item}`;\n    let btnCitiesClassName = this.state.btnCitiesState ? `${StylesHeader.navigation__item} ${StylesHeader.navigation__item_active}` : `${StylesHeader.navigation__item}`;\n\n    return (\n      <div className={`${StylesHeader.navigation__container}`}>\n        <h5>Filter By:</h5>\n        <div\n          id='btnFilterColor'\n          className={btnColorClassName}\n          onClick={this.handleBtnColorClick}\n        >\n          <span>Color</span>\n        </div>\n        <div\n          id='btnFilterCity'\n          className={btnCitiesClassName}\n          onClick={this.handleBtnCitiesClick}\n        >\n          <span>City</span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default HeaderActions\n","import React, { Component } from 'react';\nimport HeaderActions from './HeaderActions';\n\nclass Header extends Component {\n \n  render() {\n\n    return (\n      <header>\n        <h1>User Directory</h1>\n        <div>\n          <HeaderActions \n            filterColorState={this.props.filterColorState}\n            filterCitiesState={this.props.filterCitiesState} \n          />\n        </div>\n      </header>\n    )\n  }\n}\n\nexport default Header\n","export const splitArray = (array, length) => {\n  const chunks = Array.from({ length: length }, (_) => []);\n  array.forEach((value, index) => chunks[index % chunks.length].push(value));\n\n  return chunks;\n}\n","export const filterDataByColor = (data) => {\n  let filteredData = [];\n  let getAgeGreen = data.filter(function (el) {\n    return el.dob.age > 20 && el.dob.age < 57\n  });\n  let getAgeBlue = data.filter(function (el) {\n    return el.dob.age > 56\n  });\n  let getAgeRed = data.filter(function (el) {\n    return el.dob.age < 21\n  });\n\n  return filteredData.concat(getAgeGreen, getAgeBlue, getAgeRed);\n}\n","export const filterDataByCity = (data) => {\n  let filteredData = [...data].sort((a, b) => (a.location.city > b.location.city) ? 1 : (a.location.city === b.location.city) ? ((a.location.state > b.location.state) ? 1 : -1) : -1);\n\n  return filteredData;\n}\n","import React from 'react';\nimport StylesLoadingSkeleton from './LoadingSkeleton.module.scss';\n\nconst LoadingSkeleton = () => (\n  <div className={`${StylesLoadingSkeleton.loading__skeleton}`} />\n)\n\nexport default LoadingSkeleton;\n","import React from 'react';\n\nimport LoadingSkeleton from './../LoadingSkeleton/LoadingSkeleton';\nimport StylesUserCard from './UserCard.module.scss';\n\nconst UserCardList = (props) => {\n  let bgColor;\n\n  if (!props.userData) {\n    return (\n      <div className={`${StylesUserCard.card__container}`}>\n        <div className={`${StylesUserCard.card__item}`}>\n          <figure><LoadingSkeleton /></figure>\n          <div className={`${StylesUserCard.card__desc}`}>\n            <h6>\n              <div><LoadingSkeleton /></div>\n              <div><LoadingSkeleton /></div>\n            </h6>\n            <address><LoadingSkeleton /></address>\n            <div className={`${StylesUserCard.card__email}`}><LoadingSkeleton /></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  if (props.userData.dob.age < 21) {\n    bgColor = `${StylesUserCard.bg__red}`;\n  } else if (props.userData.dob.age > 20 && props.userData.dob.age < 57) {\n    bgColor = `${StylesUserCard.bg__green}`;\n  } else {\n    bgColor = `${StylesUserCard.bg__blue}`;\n  }\n\n  return (\n    <div className={`${StylesUserCard.card__container}`}>\n      <div className={`${StylesUserCard.card__item} ${bgColor}`}>\n        <figure>\n            <img src={props.userData.picture.large} alt={`${props.userData.name.first} ${props.userData.name.last}`} />\n        </figure>\n        <div className={`${StylesUserCard.card__desc}`}>\n          <h6>\n            <div>{`${props.userData.name.title}. ${props.userData.name.first} ${props.userData.name.last}`}</div>\n            <div>{props.userData.dob.age}</div>\n          </h6>\n          <address>\n            <div>\n              {`${props.userData.location.city}, ${props.userData.location.state}, ${props.userData.location.postcode}`}\n            </div>\n          </address>\n          <div className={`${StylesUserCard.card__email}`}>\n            {props.userData.email}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default UserCardList\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { splitArray } from '../../utils/splitArray';\nimport { filterDataByColor } from '../../utils/filterDataByColor';\nimport { filterDataByCity } from '../../utils/filterDataByCity';\n\nimport UserCardItem from './UserCardItem';\nimport StylesUserCard from './UserCard.module.scss';\n\nclass UserCard extends Component {\n\n  constructor(props) {\n    super(props);\n    this.cardContainerRef = React.createRef();\n\n    this.state = {\n      originalData: [],\n      chunkedData: [],\n      newChunkedData: [],\n      sortedDataByColor: [],\n      sortedDataByCity: [],\n      isLoading: true,\n      errorMessage: null,\n      scrolledCount: 0,\n      scrolledCountMax: 9,\n      windowWidth: window.innerWidth, \n      windowHeight: window.innerHeight,\n      getMoreUsers: false\n    }\n  }\n\n  componentDidMount = () => {\n    const apiURL = 'https://randomuser.me/api/?results=100';\n    window.addEventListener('resize', this.updateDimensions.bind(this));\n\n    axios.get(apiURL)\n      .then(response => {\n        this.setState({\n          originalData: response.data.results,\n          chunkedData: splitArray(response.data.results, 10),\n          isLoading: false,\n        }, function() {\n            this.setState({\n              sortedDataByColor: filterDataByColor(this.state.chunkedData[0]),\n              sortedDataByCity: filterDataByCity(this.state.chunkedData[0]),\n              newChunkedData: this.state.chunkedData[0]\n            });\n        })\n      })\n      .catch(error => {\n        this.setState({\n          errorMessage: error,\n          isLoading: false\n        })\n      });\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateDimensions.bind(this));\n  }\n\n  updateDimensions() {\n    this.setState({ \n      windowWidth: window.innerWidth\n    });\n  }\n\n  handleScroll = (props) => {\n    const node = this.cardContainerRef;\n    let windowWidth = this.state.windowWidth;\n    let scrollLeft = node.current.scrollLeft;\n    let scrollTop = node.current.scrollTop;\n    let scrollWidth = node.current.scrollWidth;\n    let scrollHeight = node.current.scrollHeight;\n    let clientHeight = node.current.clientHeight;\n\n    if (windowWidth > 640) {\n      if ((scrollWidth - scrollLeft) === windowWidth) {\n        this.setState({\n          getMoreUsers: true\n        }, function () {\n          if (this.state.scrolledCount < this.state.scrolledCountMax) {\n            setTimeout(function () {\n              this.setState({\n                scrolledCount: props + 1,\n                getMoreUsers: false\n              }, function () {\n                let updatedData = [...this.state.newChunkedData].concat(this.state.chunkedData[this.state.scrolledCount]);\n\n                this.setState({\n                  newChunkedData: updatedData,\n                  sortedDataByColor: filterDataByColor(updatedData),\n                  sortedDataByCity: filterDataByCity(updatedData)\n                })\n              })\n            }.bind(this), 500)\n          }\n        })\n      }\n    } else {\n      if ((scrollHeight - scrollTop) === clientHeight - 130) {\n        this.setState({\n          getMoreUsers: true\n        }, function () {\n          if (this.state.scrolledCount < this.state.scrolledCountMax) {\n            setTimeout(function () {\n              this.setState({\n                scrolledCount: props + 1,\n                getMoreUsers: false\n              }, function () {\n                let updatedData = [...this.state.newChunkedData].concat(this.state.chunkedData[this.state.scrolledCount]);\n\n                this.setState({\n                  newChunkedData: updatedData,\n                  sortedDataByColor: filterDataByColor(updatedData),\n                  sortedDataByCity: filterDataByCity(updatedData)\n                })\n              })\n            }.bind(this), 500)\n          }\n        })\n      }\n    }\n  }\n\n  renderContent() {\n    let isColorSelected = this.props.isColorSelected;\n    let isCitiesSelected = this.props.isCitiesSelected;\n    let dataSource;\n\n    if (isColorSelected === false) {\n      dataSource = this.state.newChunkedData;\n\n      if (isCitiesSelected) {\n        dataSource = this.state.sortedDataByCity;\n      }\n    } else if (isColorSelected === true) {\n      dataSource = this.state.sortedDataByColor;\n\n      if (isCitiesSelected === true) {\n        dataSource = this.state.sortedDataByCity;\n      }\n    } else {\n      dataSource = this.state.newChunkedData;\n    }\n\n    return (\n      <>\n        {\n          this.state.isLoading\n            ? [...new Array(5)].map((user, key) => {\n                return (\n                  <UserCardItem\n                    key={key}\n                  />\n                )\n              })\n            : dataSource.map((user, key) => {\n              return (\n                <UserCardItem\n                  key={key}\n                  userData={user}\n                />\n              )\n            })\n        }\n      </>\n    )\n  }\n\n  render() {\n    let mobileHeight;\n\n    if (this.state.windowWidth < 641) {\n      mobileHeight = this.state.windowHeight - 120;\n    }\n\n    return (\n      <section \n        ref={this.cardContainerRef} \n        className={`${StylesUserCard.container}`} \n        onScroll={() => this.handleScroll(this.state.scrolledCount)}\n        style={{\n          height: mobileHeight\n        }}\n      >\n        {this.renderContent()}\n        {\n          this.state.getMoreUsers && this.state.scrolledCount < 9\n            ? <div className={`${StylesUserCard.notice}`} >Loading more data..</div>\n            : null\n        }\n      </section>\n    )\n  }\n\n}\n\nexport default UserCard\n","import React, { Component } from 'react';\nimport Wrapper from './components/Wrapper/Wrapper';\nimport Header from './components/Header/Header';\nimport UserCard from './components/UserCard/UserCard';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      isColorSelected: null,\n      isCitiesSelected: null\n    }\n  }\n\n  handleColorStateChange = (props) => {\n    this.setState({ isColorSelected: props });\n  }\n\n  handleCitiesStateChange = (props) => {\n    this.setState({ isCitiesSelected: props });\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Header \n          filterColorState={this.handleColorStateChange} \n          filterCitiesState={this.handleCitiesStateChange} \n        />\n        <UserCard\n          isColorSelected={this.state.isColorSelected}\n          isCitiesSelected={this.state.isCitiesSelected}\n        />\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport './assets/css/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation__container\":\"Header_navigation__container__1troj\",\"navigation__item\":\"Header_navigation__item__3Usg1\",\"navigation__item_active\":\"Header_navigation__item_active__uLOQh\"};"],"sourceRoot":""}